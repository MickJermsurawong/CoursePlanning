var revAdj = [[], [], [], [601], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [45], [47], [51], [48], [49, 50, 52, 55], [54], [], [], [53], [54], [], [], [], [], [], [60, 63, 64, 67, 68, 71, 73], [70], [], [], [], [], [], [67], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [86, 90, 92, 95, 96, 97, 98], [90, 91, 95, 96, 97], [89, 90], [89, 90, 95], [], [], [], [93, 94], [95], [], [], [], [], [], [], [], [], [], [104], [105], [106], [107], [108], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [305, 306, 307, 309], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [300, 339, 377, 404, 405, 414, 416, 421], [301, 311, 314, 316, 318, 322], [303, 312, 313, 315, 317, 319, 320], [301, 303, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 326, 613], [], [306, 309], [306, 309], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [328, 329, 330, 331, 336, 339, 345, 346, 349, 350, 357], [329, 330, 345, 350, 357], [], [344], [330, 348, 353, 354, 356, 358], [], [349, 860], [], [], [], [], [], [], [], [], [], [], [], [], [347, 352, 355], [], [], [350], [], [], [], [], [], [347], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [402, 403], [398, 400], [386], [], [418, 437, 441], [], [], [], [376, 394, 396], [], [388, 422], [382], [], [], [390, 415, 417], [389, 417, 422], [395, 420, 442], [391, 392, 393, 412], [392], [], [310], [], [415], [], [], [], [401, 429, 431, 432, 436], [], [401], [423], [424, 425, 431, 432], [399], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [426], [427, 428], [], [], [430], [], [], [433], [], [435], [], [], [], [], [], [], [], [], [], [], [446], [], [453, 464, 465, 471], [], [], [464], [], [], [473], [], [], [], [], [], [], [], [], [], [], [489], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [551, 552], [], [552], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [599], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [603], [604], [69, 331, 353, 358, 372, 373, 377, 382, 384, 403, 409, 606, 607, 609, 622, 809, 825, 898, 913, 916], [69, 331, 353, 358, 372, 373, 377, 382, 384, 403, 409, 606, 607, 609, 622, 809, 825, 898, 913, 916], [70, 87, 88, 383, 410, 608, 610, 615, 616, 617, 621, 812], [413, 611, 614, 615, 617, 618, 620, 621, 811, 813], [399, 431, 614, 619, 620, 811, 818], [302], [320, 868, 893, 927], [612], [], [], [], [], [], [], [], [], [], [], [623, 627], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [644], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [669, 680], [], [679], [686, 700], [], [], [686], [], [], [], [], [], [], [], [], [], [], [], [], [], [699], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [773], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [730, 732], [], [], [], [], [], [], [749], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [815, 816, 817, 820], [], [819], [], [], [], [], [], [], [], [], [], [826], [], [], [], [], [849], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [854, 855, 856, 860], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [860], [], [], [], [875, 876, 877, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894], [883, 884, 885, 886, 887, 888, 889, 891, 892, 894], [883], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [59, 61, 62, 65, 66, 68, 69, 71, 85, 87, 88, 98, 372, 373, 381, 809, 811, 812, 813, 814, 818, 899], [59, 61, 62, 65, 66, 68, 69, 71, 85, 87, 88, 98, 372, 373, 381, 809, 811, 812, 813, 814, 818, 900], [59, 61, 62, 65, 66, 68, 69, 71, 85, 87, 88, 98, 381, 811, 812, 813, 814, 818, 901], [59, 61, 62, 65, 66, 68, 69, 71, 85, 87, 88, 98, 381, 811, 812, 813, 814, 818, 902], [59, 61, 62, 65, 66, 68, 69, 71, 87, 88, 98, 811, 812, 813, 814, 818, 903], [59, 61, 62, 65, 66, 68, 69, 71, 87, 88, 98, 811, 812, 813, 814, 818], [], [], [], [], [], [810], [331, 353, 358, 825, 913, 916], [333, 346, 864, 868, 883, 893, 927, 945], [917, 927], [333, 346, 349, 350, 868, 883, 893, 927], [], [], [349, 350], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [445, 446], [], [], [976], [976], [], [], [], [], [], [], [], [], [], [], [], [], [977], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [1019], [1019], [1019], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [1018], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748], [750, 751, 752]];

// var revAdj = [[1,2,3],[2,3],[3],[]]
var newRevAdj = JSON.parse(JSON.stringify(revAdj));


var visited = [];
var thisMat;
for (var i = 0; i < revAdj.length; i++) {
  console.log("#"+i);
  console.log(newRevAdj[i]);
};

function convertToAdjMat(adjList){
  var row;
  var mat = [];
  var n = revAdj.length;
  for (var i = 0; i < n; i++) {
    row = [];
    for (var j = 0; j < n; j++) {
      row.push(Infinity);
    }
    mat.push(row);
  }

  for (var i = 0; i < adjList.length; i++) {
    for (var j = 0; j < adjList[i].length; j++) {
      mat[i][adjList[i][j]] = -1;
    }
  }
  return mat;
}

function floyd(m){
	var V = m.length;
	for (var k = 0; k < V; k++){
    console.log(k); 
		for (var i = 0; i < V; i++){
			for (var j = 0; j < V; j++){
				m[i][j] = Math.min(m[i][j], m[i][k] + m[k][j]);
			}
		}
	}
  return m;
}

function intializeState(){
  visited = [];
  for (var i = 0; i < revAdj.length; i++) {
    visited.push(-1);
  };
}


function dfsCheck(root,depth){

  // if (visited[root] != -1) return;
  for (var i = 0; i < revAdj[root].length; i++) {
      dfsCheck(revAdj[root][i],depth-1);
      if ((depth -1 ) > thisMat[root][revAdj[root][i]]){
        var index = newRevAdj[root].indexOf(revAdj[root][i]);
        if (index > -1) newRevAdj[root].splice(index,1);
      }
      // visited[revAdj[root][i]] = 1;
  }
  
}


intializeState();
thisMat =convertToAdjMat(revAdj);
thisMat = floyd(thisMat);
console.log("Floyd completed...");

for (var i = 0; i < thisMat.length; i++) {
  var thisRow = thisMat[i];
  console.log("#"+i);
  console.log(thisRow);
}

for (var i = 0; i < revAdj.length; i++) {
  dfsCheck(i,0);
  // visited[i] = 1;
};
console.log("Remove edge completed...");

console.log(newRevAdj);
// function convertMatAdjToAdjList(mat){

//   for (var i = 0; i < adjList.length; i++) {
//     for (var j = 0; j < adjList[i].length; j++) {
//       mat[i][adjList[i][j]] = -1;
//     }
//   }
// }
